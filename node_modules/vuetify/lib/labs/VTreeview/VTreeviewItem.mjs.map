{"version":3,"file":"VTreeviewItem.mjs","names":["VBtn","VListItemAction","VListItemSubtitle","VListItemTitle","makeVListItemProps","VListItem","VProgressCircular","useDensity","IconValue","useNestedItem","useLink","genOverlays","computed","inject","ref","genericComponent","propsFactory","useRender","VTreeviewSymbol","makeVTreeviewItemProps","loading","Boolean","toggleIcon","slim","VTreeviewItem","name","props","setup","_ref","attrs","slots","emit","link","rawId","value","undefined","href","vListItemRef","activate","isActivated","select","isSelected","isIndeterminate","isGroupActivator","root","id","isActivatableGroupActivator","activatable","densityClasses","slotProps","isActive","isClickable","disabled","list","activateItem","e","onKeyDown","key","preventDefault","visibleIds","hasTitle","title","hasSubtitle","subtitle","listItemProps","filterProps","hasPrepend","prepend","_withDirectives","_createVNode","has","class","_Fragment","default","onClick","loader","_resolveDirective","ripple","_mergeProps"],"sources":["../../../src/labs/VTreeview/VTreeviewItem.tsx"],"sourcesContent":["// Styles\nimport './VTreeviewItem.sass'\n\n// Components\nimport { VBtn } from '@/components/VBtn'\nimport { VListItemAction, VListItemSubtitle, VListItemTitle } from '@/components/VList'\nimport { makeVListItemProps, VListItem } from '@/components/VList/VListItem'\nimport { VProgressCircular } from '@/components/VProgressCircular'\n\n// Composables\nimport { useDensity } from '@/composables/density'\nimport { IconValue } from '@/composables/icons'\nimport { useNestedItem } from '@/composables/nested/nested'\nimport { useLink } from '@/composables/router'\nimport { genOverlays } from '@/composables/variant'\n\n// Utilities\nimport { computed, inject, ref } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport { VTreeviewSymbol } from './shared'\nimport type { ListItemSlot, VListItemSlots } from '@/components/VList/VListItem'\n\nexport const makeVTreeviewItemProps = propsFactory({\n  loading: Boolean,\n  toggleIcon: IconValue,\n\n  ...makeVListItemProps({ slim: true }),\n}, 'VTreeviewItem')\n\nexport const VTreeviewItem = genericComponent<VListItemSlots>()({\n  name: 'VTreeviewItem',\n\n  props: makeVTreeviewItemProps(),\n\n  setup (props, { attrs, slots, emit }) {\n    const link = useLink(props, attrs)\n    const rawId = computed(() => props.value === undefined ? link.href.value : props.value)\n    const vListItemRef = ref<VListItem>()\n\n    const {\n      activate,\n      isActivated,\n      select,\n      isSelected,\n      isIndeterminate,\n      isGroupActivator,\n      root,\n      id,\n    } = useNestedItem(rawId, false)\n\n    const isActivatableGroupActivator = computed(() =>\n      (root.activatable.value) &&\n      isGroupActivator\n    )\n\n    const { densityClasses } = useDensity(props, 'v-list-item')\n\n    const slotProps = computed(() => ({\n      isActive: isActivated.value,\n      select,\n      isSelected: isSelected.value,\n      isIndeterminate: isIndeterminate.value,\n    } satisfies ListItemSlot))\n\n    const isClickable = computed(() =>\n      !props.disabled &&\n      props.link !== false &&\n      (props.link || link.isClickable.value || (props.value != null && !!vListItemRef.value?.list))\n    )\n\n    function activateItem (e: MouseEvent | KeyboardEvent) {\n      if (\n        !isClickable.value ||\n        (!isActivatableGroupActivator.value && isGroupActivator)\n      ) return\n\n      if (root.activatable.value) {\n        if (isActivatableGroupActivator.value) {\n          activate(!isActivated.value, e)\n        } else {\n          vListItemRef.value?.activate(!vListItemRef.value?.isActivated, e)\n        }\n      }\n    }\n\n    function onKeyDown (e: KeyboardEvent) {\n      if (e.key === 'Enter' || e.key === ' ') {\n        e.preventDefault()\n        activateItem(e)\n      }\n    }\n\n    const visibleIds = inject(VTreeviewSymbol, { visibleIds: ref() }).visibleIds\n\n    useRender(() => {\n      const hasTitle = (slots.title || props.title != null)\n      const hasSubtitle = (slots.subtitle || props.subtitle != null)\n      const listItemProps = VListItem.filterProps(props)\n      const hasPrepend = slots.prepend || props.toggleIcon\n\n      return isActivatableGroupActivator.value\n        ? (\n          <div\n            class={[\n              'v-list-item',\n              'v-list-item--one-line',\n              'v-treeview-item',\n              'v-treeview-item--activetable-group-activator',\n              {\n                'v-list-item--active': isActivated.value || isSelected.value,\n                'v-treeview-item--filtered': visibleIds.value && !visibleIds.value.has(id.value),\n              },\n              densityClasses.value,\n              props.class,\n            ]}\n            onClick={ activateItem }\n            v-ripple={ isClickable.value && props.ripple }\n          >\n            <>\n              { genOverlays(isActivated.value || isSelected.value, 'v-list-item') }\n              { props.toggleIcon && (\n                <VListItemAction start={ false }>\n                  <VBtn\n                    density=\"compact\"\n                    icon={ props.toggleIcon }\n                    loading={ props.loading }\n                    variant=\"text\"\n                    onClick={ props.onClick }\n                  >\n                    {{\n                      loader () {\n                        return (\n                          <VProgressCircular\n                            indeterminate=\"disable-shrink\"\n                            size=\"20\"\n                            width=\"2\"\n                          />\n                        )\n                      },\n                    }}\n                  </VBtn>\n                </VListItemAction>\n              )}\n\n             </>\n\n            <div class=\"v-list-item__content\" data-no-activator=\"\">\n              { hasTitle && (\n                <VListItemTitle key=\"title\">\n                  { slots.title?.({ title: props.title }) ?? props.title }\n                </VListItemTitle>\n              )}\n\n              { hasSubtitle && (\n                <VListItemSubtitle key=\"subtitle\">\n                  { slots.subtitle?.({ subtitle: props.subtitle }) ?? props.subtitle }\n                </VListItemSubtitle>\n              )}\n\n              { slots.default?.(slotProps.value) }\n            </div>\n          </div>\n        ) : (\n        <VListItem\n          ref={ vListItemRef }\n          { ...listItemProps }\n          class={[\n            'v-treeview-item',\n            {\n              'v-treeview-item--filtered': visibleIds.value && !visibleIds.value.has(id.value),\n            },\n            props.class,\n          ]}\n          value={ id.value }\n          onClick={ activateItem }\n          onKeydown={ isClickable.value && onKeyDown }\n        >\n          {{\n            ...slots,\n            prepend: hasPrepend ? slotProps => {\n              return (\n                <>\n                  { props.toggleIcon && (\n                    <VListItemAction start={ false }>\n                      <VBtn\n                        density=\"compact\"\n                        icon={ props.toggleIcon }\n                        loading={ props.loading }\n                        variant=\"text\"\n                      >\n                        {{\n                          loader () {\n                            return (\n                              <VProgressCircular\n                                indeterminate=\"disable-shrink\"\n                                size=\"20\"\n                                width=\"2\"\n                              />\n                            )\n                          },\n                        }}\n                      </VBtn>\n                    </VListItemAction>\n                  )}\n\n                  { slots.prepend?.(slotProps) }\n                </>\n              )\n            } : undefined,\n          }}\n        </VListItem>\n        )\n    })\n\n    return {}\n  },\n})\n\nexport type VTreeviewItem = InstanceType<typeof VTreeviewItem>\n"],"mappings":"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","ignoreList":[]}