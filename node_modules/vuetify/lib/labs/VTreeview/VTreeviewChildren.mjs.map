{"version":3,"file":"VTreeviewChildren.mjs","names":["VTreeviewGroup","VTreeviewItem","VCheckboxBtn","shallowRef","genericComponent","propsFactory","makeVTreeviewChildrenProps","loadChildren","Function","loadingIcon","type","String","default","items","Array","selectable","Boolean","VTreeviewChildren","name","props","setup","_ref","emit","slots","isLoading","hasLoaded","checkChildren","item","Promise","resolve","length","value","then","finally","onClick","e","stopPropagation","map","_ref2","children","itemProps","raw","slotsWithItem","prepend","slotProps","_ref3","isSelected","isIndeterminate","_createVNode","undefined","append","title","treeviewGroupProps","filterProps","treeviewChildrenProps","_mergeProps","activator","_ref4","activatorProps"],"sources":["../../../src/labs/VTreeview/VTreeviewChildren.tsx"],"sourcesContent":["// Components\nimport { VTreeviewGroup } from './VTreeviewGroup'\nimport { VTreeviewItem } from './VTreeviewItem'\nimport { VCheckboxBtn } from '@/components/VCheckbox'\n\n// Utilities\nimport { shallowRef } from 'vue'\nimport { genericComponent, propsFactory } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { InternalListItem } from '@/components/VList/VList'\nimport type { VListItemSlots } from '@/components/VList/VListItem'\nimport type { GenericProps } from '@/util'\n\nexport type VTreeviewChildrenSlots<T> = {\n  [K in keyof Omit<VListItemSlots, 'default'>]: VListItemSlots[K] & { item: T }\n} & {\n  default: never\n  item: { props: InternalListItem['props'] }\n}\n\nexport const makeVTreeviewChildrenProps = propsFactory({\n  loadChildren: Function as PropType<(item: unknown) => Promise<void>>,\n  loadingIcon: {\n    type: String,\n    default: '$loading',\n  },\n  items: Array as PropType<readonly InternalListItem[]>,\n  selectable: Boolean,\n}, 'VTreeviewChildren')\n\nexport const VTreeviewChildren = genericComponent<new <T extends InternalListItem>(\n  props: {\n    items?: readonly T[]\n  },\n  slots: VTreeviewChildrenSlots<T>\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VTreeviewChildren',\n\n  props: makeVTreeviewChildrenProps(),\n\n  setup (props, { emit, slots }) {\n    const isLoading = shallowRef(false)\n    const hasLoaded = shallowRef(false)\n\n    function checkChildren (item: unknown) {\n      return new Promise<void>(resolve => {\n        if (!props.items?.length || !props.loadChildren || hasLoaded.value) return resolve()\n\n        isLoading.value = true\n        props.loadChildren(item).then(resolve)\n      }).then(() => {\n        hasLoaded.value = true\n      }).finally(() => {\n        isLoading.value = false\n      })\n    }\n\n    function onClick (e: MouseEvent | KeyboardEvent, item: any) {\n      e.stopPropagation()\n\n      checkChildren(item)\n    }\n\n    return () => slots.default?.() ?? props.items?.map(({ children, props: itemProps, raw: item }) => {\n      const slotsWithItem = {\n        prepend: slots.prepend\n          ? slotProps => slots.prepend?.({ ...slotProps, item })\n          : props.selectable\n            ? ({ isSelected, isIndeterminate }) => (\n              <VCheckboxBtn\n                key={ item.value }\n                tabindex=\"-1\"\n                modelValue={ isSelected }\n                loading={ isLoading.value }\n                indeterminate={ isIndeterminate }\n                onClick={ (e: MouseEvent) => onClick(e, item) }\n              />\n            )\n            : undefined,\n        append: slots.append ? slotProps => slots.append?.({ ...slotProps, item }) : undefined,\n        title: slots.title ? slotProps => slots.title?.({ ...slotProps, item }) : undefined,\n      } satisfies VTreeviewItem['$props']['$children']\n\n      const treeviewGroupProps = VTreeviewGroup.filterProps(itemProps)\n      const treeviewChildrenProps = VTreeviewChildren.filterProps(props)\n\n      return children ? (\n        <VTreeviewGroup\n          value={ itemProps?.value }\n          { ...treeviewGroupProps }\n        >\n          {{\n            activator: ({ props: activatorProps }) => (\n              <VTreeviewItem\n                { ...itemProps }\n                { ...activatorProps }\n                loading={ isLoading.value }\n                v-slots={ slotsWithItem }\n                onClick={ (e: MouseEvent | KeyboardEvent) => onClick(e, item) }\n              />\n            ),\n            default: () => (\n              <VTreeviewChildren\n                { ...treeviewChildrenProps }\n                items={ children }\n                v-slots={ slots }\n              />\n            ),\n          }}\n        </VTreeviewGroup>\n      ) : (\n        slots.item?.({ props: itemProps }) ?? (\n          <VTreeviewItem\n            { ...itemProps }\n            v-slots={ slotsWithItem }\n          />\n        ))\n    })\n  },\n})\n"],"mappings":"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","ignoreList":[]}